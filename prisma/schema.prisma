generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id                     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  booking_date           DateTime @db.Date
  expected_delivery_date DateTime @db.Date
  cargo_id               String   @db.Uuid
  shipping_agent_id      String   @db.Uuid
  status                 String   @db.VarChar(255)
  created_at             DateTime @default(now()) @db.Timestamp(6)
  updated_at             DateTime @default(now()) @db.Timestamp(6)
  cargo                  cargo    @relation(fields: [cargo_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user                   user     @relation(fields: [shipping_agent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model business_administrator {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  admin_name      String       @db.VarChar(255)
  admin_contact   String       @db.VarChar(255)
  user_id         String       @db.Uuid
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user            user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model cargo {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cargo_name      String       @db.VarChar(255)
  cargo_weight    Int
  cargo_volume    Int
  cargo_type      String       @db.VarChar(255)
  organization_id String       @db.Uuid
  driver_id       String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  booking         booking[]
  user            user         @relation(fields: [driver_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model driver {
  id               String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  license_number   String       @db.VarChar(255)
  vehicle_type     String       @db.VarChar(255)
  vehicle_capacity Int
  user_id          String       @db.Uuid
  organization_id  String       @db.Uuid
  created_at       DateTime     @default(now()) @db.Timestamp(6)
  updated_at       DateTime     @default(now()) @db.Timestamp(6)
  organization     organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model organization {
  id                     String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description            String?                  @db.VarChar(255)
  name                   String                   @db.VarChar(255)
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  updated_at             DateTime                 @default(now()) @db.Timestamp(6)
  user_id                String                   @db.Uuid
  tenant_id              String                   @db.VarChar(255)
  business_administrator business_administrator[]
  cargo                  cargo[]
  driver                 driver[]
  user                   user                     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                     String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                  String                   @unique @db.VarChar(255)
  firstName              String?                  @db.VarChar(255)
  lastName               String?                  @db.VarChar(255)
  roq_user_id            String                   @db.VarChar(255)
  tenant_id              String                   @db.VarChar(255)
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  updated_at             DateTime                 @default(now()) @db.Timestamp(6)
  booking                booking[]
  business_administrator business_administrator[]
  cargo                  cargo[]
  driver                 driver[]
  organization           organization[]
}
